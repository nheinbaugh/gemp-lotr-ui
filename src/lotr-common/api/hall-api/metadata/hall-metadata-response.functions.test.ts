import { describe, expect, it } from 'vitest';
import { convertGetHallMetadataFromXml } from './hall-metadata-response.functions';

const channelNumber = 9;
const mockHallMetadataResponse = `<?xml version="1.0" encoding="UTF-8" standalone="no"?><hall channelNumber="${channelNumber}" currency="0" serverTime="2023-04-24 20:53:10"><queue action="add" collection="All cards" cost="1500" format="Fellowship Block" id="fotr_queue" joinable="true" playerCount="0" prizes="&lt;div class='prizeHint' value='2 wins - 2 boosters and a random promo, 1 win - 2 boosters, 0 wins - 1 booster'&gt;(2+promo)-2-1&lt;/div&gt;" queue="Fellowship Block" signedUp="false" start="When 4 players join" system="Single elimination"/><queue action="add" collection="All cards" cost="1500" format="Towers Standard" id="ts_queue" joinable="true" playerCount="0" prizes="&lt;div class='prizeHint' value='2 wins - 2 boosters and a random promo, 1 win - 2 boosters, 0 wins - 1 booster'&gt;(2+promo)-2-1&lt;/div&gt;" queue="Towers Standard" signedUp="false" start="When 4 players join" system="Single elimination"/><queue action="add" collection="All cards" cost="1500" format="Movie Block" id="movie_queue" joinable="true" playerCount="0" prizes="&lt;div class='prizeHint' value='2 wins - 2 boosters and a random promo, 1 win - 2 boosters, 0 wins - 1 booster'&gt;(2+promo)-2-1&lt;/div&gt;" queue="Movie Block" signedUp="false" start="When 4 players join" system="Single elimination"/><queue action="add" collection="All cards" cost="1500" format="Expanded" id="expanded_queue" joinable="true" playerCount="0" prizes="&lt;div class='prizeHint' value='2 wins - 2 boosters and a random promo, 1 win - 2 boosters, 0 wins - 1 booster'&gt;(2+promo)-2-1&lt;/div&gt;" queue="Expanded" signedUp="false" start="When 4 players join" system="Single elimination"/><queue action="add" collection="All cards" cost="0" format="Fellowship Block" id="fotr_daily_eu" joinable="false" playerCount="0" prizes="2 boosters per win (or bye), 1 per loss, max 3 rounds, players with at least 2 wins get a promo" queue="Daily Gondor Fellowship Block" signedUp="false" start="2023-04-25 19:30:00" system="Swiss, minimum players: 4"/><queue action="add" collection="All cards" cost="0" format="Fellowship Block" id="fotr_daily_us" joinable="false" playerCount="0" prizes="2 boosters per win (or bye), 1 per loss, max 3 rounds, players with at least 2 wins get a promo" queue="Daily Rohan Fellowship Block" signedUp="false" start="2023-04-26 00:30:00" system="Swiss, minimum players: 4"/><queue action="add" collection="All cards" cost="0" format="Movie Block" id="movie_daily_eu" joinable="false" playerCount="0" prizes="2 boosters per win (or bye), 1 per loss, max 3 rounds, players with at least 2 wins get a promo" queue="Daily Gondor Movie Block" signedUp="false" start="2023-04-26 19:30:00" system="Swiss, minimum players: 4"/><queue action="add" collection="All cards" cost="0" format="Movie Block" id="movie_daily_us" joinable="false" playerCount="0" prizes="2 boosters per win (or bye), 1 per loss, max 3 rounds, players with at least 2 wins get a promo" queue="Daily Rohan Movie Block" signedUp="false" start="2023-04-25 00:30:00" system="Swiss, minimum players: 4"/><format type="fotr_block">Fellowship Block</format><format type="pc_fotr_block">Fellowship Block (PC)</format><format type="movie">Movie Block</format><format type="pc_movie">Movie Block (PC)</format><format type="expanded">Expanded</format><format type="pc_expanded">Expanded (PC)</format><format type="ttt_block">Towers Block</format><format type="towers_standard">Towers Standard</format><format type="ts_reflections">Enhanced Towers Standard</format><format type="king_block">King Block</format><format type="rotk_sta">King Standard</format><format type="multipath">Pre-Shadows Multipath</format><format type="war_block">War of the Ring Block</format><format type="war_standard">War of the Ring Standard</format><format type="hunter_block">Hunters Block</format><format type="pre-hunters_expanded">Pre-Hunters Expanded</format><format type="standard">Standard</format><format type="open">Open</format><format type="rev_tow_sta">Anything Goes</format><format type="french">French</format><format type="hobbit">The Hobbit Draft Game</format></hall>`;

describe('hall-metadata-response.functions', () => {
  describe('convertGetHallMetadataFromXml', () => {
    it('should return an object that is properly mapped from the response', () => {
      const result = convertGetHallMetadataFromXml(mockHallMetadataResponse);
      expect(result.channelNumber).toBe(channelNumber);
    });
  });
});
